plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'checkstyle'
}

group = 'pl.szymonmilczarek'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.22'
    hibernateVersion = '5.6.7.Final'
    groovyVersion = '3.0.10'
    postgresqlVersion = '42.3.3'
    h2databaseVersion = '2.1.210'
    flywayVersion = '8.5.4'
    spockVersion = '2.2-M1-groovy-3.0'
    mockitoVersion = '4.4.0'
    testContainersVersion = '1.16.3'
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-validation'
    )

    compileOnly(
            "org.projectlombok:lombok:${lombokVersion}"
    )

    annotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
    )

    implementation(
            "org.postgresql:postgresql:${postgresqlVersion}",
            "com.h2database:h2:${h2databaseVersion}",
            "org.flywaydb:flyway-core:${flywayVersion}",
            "org.codehaus.groovy:groovy:${groovyVersion}"
    )

    testImplementation(
            "org.codehaus.groovy:groovy:${groovyVersion}",
            "org.spockframework:spock-bom:${spockVersion}",
            "org.spockframework:spock-core:${spockVersion}",
            "org.mockito:mockito-inline:${mockitoVersion}"
    )

    integrationTestImplementation(
            "org.springframework.boot:spring-boot-starter-test",
            "org.spockframework:spock-spring:${spockVersion}",
            "org.testcontainers:spock:${testContainersVersion}",
            "org.testcontainers:postgresql:${testContainersVersion}",
    )
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
    useJUnitPlatform()
}

checkstyle {
    configFile = file("$rootDir/checkstyle.xml")
}

checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java/'
    source = 'src/test/groovy/'
}
checkstyleIntegrationTest {
    source = 'src/integrationTest/java/'
    source = 'src/integrationTest/groovy/'
}
